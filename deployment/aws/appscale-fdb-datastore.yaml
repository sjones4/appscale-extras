---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AppScale datastore foundationdb cluster, requires environment
Parameters:
  DataVolumeSize:
    Description: AppScale datastore data volume size
    Type: Number
    MinValue: 10
    MaxValue: 10000
    Default: 100
  DatastoreMaxPort:
    Description: AppScale datastore port range end (4000 - MAX)
    Type: Number
    MinValue: 4000
    MaxValue: 4015
    Default: 4003
  EC2InstanceType:
    Description: EC2 instance type for datastore hosts
    Type: String
    Default: m5.xlarge
    AllowedValues:
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
  EC2SshKey:
    Description: EC2 instance SSH keypair for datastore hosts
    Type: AWS::EC2::KeyPair::KeyName
    Default: ""
  LoadBalancerIp:
    Description: IP address of the AppScale load balancer host
    Type: String
    AllowedPattern: "[0-9.]{7,15}"
  ZookeeperIp:
    Description: IP address of the AppScale zookeeper host
    Type: String
    AllowedPattern: "[0-9.]{7,15}"
  SubnetCidr:
    Description: CIDR for the datastore fdb cluster subnet
    Type: String
    Default: "10.4.128.0/20"
    AllowedValues:
      - "10.4.16.0/20"
      - "10.4.32.0/20"
      - "10.4.48.0/20"
      - "10.4.64.0/20"
      - "10.4.80.0/20"
      - "10.4.96.0/20"
      - "10.4.112.0/20"
      - "10.4.128.0/20"
      - "10.4.144.0/20"
      - "10.4.160.0/20"
      - "10.4.176.0/20"
      - "10.4.192.0/20"
      - "10.4.208.0/20"
      - "10.4.224.0/20"
      - "10.4.240.0/20"
Conditions:
  UseEc2SshKeyParameter: !Not [!Equals ["", !Ref "EC2SshKey"]]
Mappings:
  # https://cloud-images.ubuntu.com/locator/ec2/
  # search for hvm:ebs-ssd 16.04 LTS
  AWSRegion2AMI:
    cn-north-1:
      Xenial1604: ami-013ead89472fc7464
    eu-central-1:
      Xenial1604: ami-0cfc1cd9ab351357c
    eu-west-1:
      Xenial1604: ami-09f0b8b3e41191524
    eu-west-2:
      Xenial1604: ami-0f60b09eab2ef8366
    us-east-1:
      Xenial1604: ami-0f9cf087c1f27d9b1
    us-east-2:
      Xenial1604: ami-0653e888ec96eab9b
    us-west-1:
      Xenial1604: ami-08945b3352c7bf9c0
    us-west-2:
      Xenial1604: ami-076e276d85f524150
Resources:
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !ImportValue AppScaleVpcId
      AvailabilityZone: !ImportValue AppScalePublicSubnetZone
      MapPublicIpOnLaunch: true
      CidrBlock: !Ref SubnetCidr
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore Subnet
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !ImportValue AppScaleVpcId
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore Routes
  DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !ImportValue AppScaleGatewayId
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable
  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !ImportValue AppScaleVpcId
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore Network ACL
  InboundSSHNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: "110"
      Protocol: "6"
      RuleAction: allow
      Egress: "false"
      CidrBlock: !ImportValue AppScaleVpcCidr
      PortRange:
        From: "22"
        To: "22"
  InboundLowRegisteredNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: "140"
      Protocol: "6"
      RuleAction: allow
      Egress: "false"
      CidrBlock: !ImportValue AppScaleVpcCidr
      PortRange:
        From: "1024"
        To: "32767"
  InboundEphemeralNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: "200"
      Protocol: "6"
      RuleAction: allow
      Egress: "false"
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: "32768"
        To: "65535"
  OutboundNetworkAclEntry:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: "100"
      Protocol: "6"
      RuleAction: allow
      Egress: "true"
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: "0"
        To: "65535"
  SubnetNetworkAclAssociation:
    Type: "AWS::EC2::SubnetNetworkAclAssociation"
    Properties:
      SubnetId: !Ref Subnet
      NetworkAclId: !Ref NetworkAcl
  FdbDatastoreRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /appscale/
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
  FdbDatastoreInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /appscale/
      Roles:
        - !Ref FdbDatastoreRole
  FdbDatastoreSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for datastore hosts
      VpcId: !ImportValue AppScaleVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !ImportValue AppScaleVpcCidr
        - IpProtocol: tcp
          FromPort: 4000
          ToPort: 4016
          CidrIp: !ImportValue AppScaleVpcCidr
        - IpProtocol: tcp
          FromPort: 4500
          ToPort: 4501
          CidrIp: !ImportValue AppScaleVpcCidr
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore Group
  FdbVolume1:
    Type: AWS::EC2::Volume
    DeletionPolicy: Delete
    Properties:
      AvailabilityZone: !GetAtt Subnet.AvailabilityZone
      Size: !Ref DataVolumeSize
      VolumeType: gp2
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 1
  FdbVolume2:
    Type: AWS::EC2::Volume
    DeletionPolicy: Delete
    Properties:
      AvailabilityZone: !GetAtt Subnet.AvailabilityZone
      Size: !Ref DataVolumeSize
      VolumeType: gp2
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 2
  FdbVolume3:
    Type: AWS::EC2::Volume
    DeletionPolicy: Delete
    Properties:
      AvailabilityZone: !GetAtt Subnet.AvailabilityZone
      Size: !Ref DataVolumeSize
      VolumeType: gp2
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 3
  FdbInterface1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref Subnet
      GroupSet:
        - !Ref FdbDatastoreSecurityGroup
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 1
  FdbInterface2:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref Subnet
      GroupSet:
        - !Ref FdbDatastoreSecurityGroup
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 1
  FdbInterface3:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref Subnet
      GroupSet:
        - !Ref FdbDatastoreSecurityGroup
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 1
  FdbLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        IamInstanceProfile:
          Arn: !GetAtt FdbDatastoreInstanceProfile.Arn
        ImageId: !FindInMap
          - AWSRegion2AMI
          - !Ref AWS::Region
          - Xenial1604
        InstanceType: !Ref EC2InstanceType
        KeyName: !If [UseEc2SshKeyParameter, !Ref EC2SshKey, !Ref "AWS::NoValue"]
        UserData:
          Fn::Base64: !Sub |
            #cloud-config
            bootcmd:
             - test ! -z "$(blkid /dev/nvme1n1)" || mkfs -t ext4 -L appscale /dev/nvme1n1
             - test -d /appscale || mkdir -v /appscale
            mounts:
             - ["LABEL=appscale", "/appscale", "ext4", "defaults,noatime,discard", "0", "2"]
            write_files:
             - path: /etc/appscale/load_balancer_ips
               owner: "root:root"
               permissions: "0644"
               content: ${LoadBalancerIp}
             - path: /etc/appscale/my_private_ip
               owner: "root:root"
               permissions: "0644"
               content: ""
             - path: /etc/appscale/zookeeper_locations
               owner: "root:root"
               permissions: "0644"
               content: ${ZookeeperIp}
             - path: /etc/foundationdb/fdb.cluster
               owner: "root:root"
               permissions: "0644"
               content: appscalefdb:appscalefdb@${FdbInterface1.PrimaryPrivateIpAddress}:4500,${FdbInterface2.PrimaryPrivateIpAddress}:4500,${FdbInterface3.PrimaryPrivateIpAddress}:4500
             - path: /etc/foundationdb/foundationdb.conf
               owner: "root:root"
               permissions: "0644"
               content: |
                 [fdbmonitor]
                 user = foundationdb
                 group = foundationdb
                 
                 [general]
                 restart_delay = 60
                 cluster_file = /etc/foundationdb/fdb.cluster
                 
                 [fdbserver]
                 command = /usr/sbin/fdbserver
                 public_address = auto:$ID
                 listen_address = public
                 datadir = /appscale/fdb/data/$ID
                 logdir = /var/log/foundationdb
                 
                 [fdbserver.4500]
                 [fdbserver.4501]
                 
                 [backup_agent]
                 command = /usr/lib/foundationdb/backup_agent/backup_agent
                 logdir = /var/log/foundationdb
                 
                 [backup_agent.1]
             - path: /etc/systemd/system/appscale-datastore@.service
               owner: "root:root"
               permissions: "0644"
               content: |
                 [Unit]
                 Description=AppScale Datastore on Port %I
                 AssertPathExists=/etc/appscale/load_balancer_ips
                 AssertPathExists=/etc/appscale/my_private_ip
                 AssertPathExists=/etc/appscale/zookeeper_locations
                 AssertPathExists=/etc/foundationdb/fdb.cluster
                 Wants=foundationdb.service
                 After=foundationdb.service network-online.target time-sync.target
                 
                 [Service]
                 Type=simple
                 ExecStartPre=-/usr/bin/podman create --name "appscale-datastore-%i" --conmon-pidfile /run/appscale-datastore-%i.pid --volume /etc/appscale --volume /etc/foundationdb --publish %i:%i docker.io/sjones4/appscale-fdb-datastore:latest appscale-datastore --type fdb --port %i
                 ExecStart=/usr/bin/podman start --attach "appscale-datastore-%i"
                 ExecStop=-/usr/bin/podman stop --timeout 25 "appscale-datastore-%i"
                 TimeoutStartSec=60
                 TimeoutStopSec=30
                 Restart=on-failure
                 RestartSec=60
                 PIDFile=/run/appscale-datastore-%i.pid
                 SyslogIdentifier=datastore-%i
                 # Security
                 PrivateTmp=true
                 ProtectSystem=full
                 
                 [Install]
                 WantedBy=multi-user.target
             - path: /etc/systemd/system/appscale-datastore-groomer.service
               owner: "root:root"
               permissions: "0644"
               content: |
                 [Unit]
                 Description=Run AppScale datastore groomer once
                 AssertPathExists=/etc/appscale/load_balancer_ips
                 AssertPathExists=/etc/appscale/my_private_ip
                 AssertPathExists=/etc/appscale/zookeeper_locations
                 AssertPathExists=/etc/foundationdb/fdb.cluster
                 Wants=appscale-datastore-groomer.timer foundationdb.service
                 
                 [Service]
                 Type=oneshot
                 ExecStartPre=-/usr/bin/podman create --name "appscale-datastore-groomer" --conmon-pidfile /run/appscale-datastore-groomer.pid --volume /etc/appscale --volume /etc/foundationdb docker.io/sjones4/appscale-fdb-datastore:latest appscale-groomer
                 ExecStart=/usr/bin/podman start --attach "appscale-datastore-groomer"
                 ExecStop=-/usr/bin/podman stop --timeout 25 "appscale-datastore-groomer"
                 TimeoutStartSec=60
                 TimeoutStopSec=30
                 PIDFile=/run/appscale-datastore-groomer.pid
                 SyslogIdentifier=datastore-groomer
                 # Security
                 PrivateTmp=true
                 ProtectSystem=full
                 
                 [Install]
                 WantedBy=multi-user.target
             - path: /etc/systemd/system/appscale-datastore-groomer.timer
               owner: "root:root"
               permissions: "0644"
               content: |
                 [Unit]
                 Description=Run AppScale datastore groomer hourly
                 Requires=appscale-datastore-groomer.service
                 
                 [Timer]
                 Unit=appscale-datastore-groomer.service
                 OnUnitInactiveSec=1h
                 RandomizedDelaySec=15m
                 
                 [Install]
                 WantedBy=timers.target
            runcmd:
              - curl -fs http://169.254.169.254/latest/meta-data/local-ipv4 > /etc/appscale/my_private_ip
              - apt-get update --quiet
              - apt-get install --quiet --assume-yes software-properties-common uidmap
              - add-apt-repository -y ppa:projectatomic/ppa
              - apt-get update --quiet
              - apt-get --quiet --assume-yes install podman
              - curl -fsL https://www.foundationdb.org/downloads/6.1.8/ubuntu/installers/foundationdb-clients_6.1.8-1_amd64.deb > /root/foundationdb-clients_6.1.8-1_amd64.deb
              - curl -fsL https://www.foundationdb.org/downloads/6.1.8/ubuntu/installers/foundationdb-server_6.1.8-1_amd64.deb > /root/foundationdb-server_6.1.8-1_amd64.deb
              - dpkg --install /root/foundationdb-server_6.1.8-1_amd64.deb /root/foundationdb-clients_6.1.8-1_amd64.deb
              - mkdir -pv /appscale/fdb
              - chown foundationdb.foundationdb /etc/foundationdb/fdb.cluster
              - chown -R foundationdb.foundationdb /appscale/fdb
              - chown -R foundationdb.foundationdb /var/log/foundationdb
              - cp -v /etc/init.d/foundationdb.dpkg-new /etc/init.d/foundationdb
              - systemctl daemon-reload
              - systemctl restart foundationdb
              - fdbcli --exec "configure new double ssd"
              - for PORT in $(seq 4000 ${DatastoreMaxPort}); do systemctl start appscale-datastore@$PORT.service; done
              - for PORT in $(seq 4000 ${DatastoreMaxPort}); do systemctl enable appscale-datastore@$PORT.service; done
              - systemctl start appscale-datastore-groomer.service appscale-datastore-groomer.timer
              - systemctl enable appscale-datastore-groomer.service appscale-datastore-groomer.timer
  FdbInstance1:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref FdbLaunchTemplate
        Version: !GetAtt FdbLaunchTemplate.LatestVersionNumber
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref FdbInterface1
          DeviceIndex: 0
      Volumes:
        - VolumeId: !Ref FdbVolume1
          Device: /dev/sdf
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 1
  FdbInstance2:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref FdbLaunchTemplate
        Version: !GetAtt FdbLaunchTemplate.LatestVersionNumber
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref FdbInterface2
          DeviceIndex: 0
      Volumes:
        - VolumeId: !Ref FdbVolume2
          Device: /dev/sdf
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 2
  FdbInstance3:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref FdbLaunchTemplate
        Version: !GetAtt FdbLaunchTemplate.LatestVersionNumber
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref FdbInterface3
          DeviceIndex: 0
      Volumes:
        - VolumeId: !Ref FdbVolume3
          Device: /dev/sdf
      Tags:
        - Key: Name
          Value: AppScale FDB Datastore 3
Outputs:
  DatastoreInstanceId1:
    Description: Identifier for FDB datastore instance
    Value: !Ref FdbInstance1
  DatastoreIp1:
    Description: IP address for FDB datastore instance
    Value: !GetAtt FdbInterface1.PrimaryPrivateIpAddress
  DatastoreInstanceId2:
    Description: Identifier for FDB datastore instance
    Value: !Ref FdbInstance2
  DatastoreIp2:
    Description: IP address for FDB datastore instance
    Value: !GetAtt FdbInterface2.PrimaryPrivateIpAddress
  DatastoreInstanceId3:
    Description: Identifier for FDB datastore instance
    Value: !Ref FdbInstance3
  DatastoreIp3:
    Description: IP address for FDB datastore instance
    Value: !GetAtt FdbInterface3.PrimaryPrivateIpAddress
  DatastorePortRange:
    Description: Port range for FDB datastore services
    Value: !Sub "4000-${DatastoreMaxPort}"

